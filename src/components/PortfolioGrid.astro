---
import { Image } from 'astro:assets';
import work1 from '../assets/work1.jpg';
import work2 from '../assets/work2.jpg';
import work3 from '../assets/work3.jpg';
import work4 from '../assets/work4.jpg';
import work5 from '../assets/work5.jpg';
import mock6 from '../assets/mock6.jpg';

const projects = [
  {
    title: 'Formats · Vive Río',
    industry: 'Construction · Ops',
    kpi: '↑ Faster approvals, paperless flow',
    description:
      'Full-stack web app to create, sign, and share worksite forms digitally with technical supervision and contractor validation.',
    image: work1,
    href: '#',
    modal: {
      overview:
        'Digitized the form lifecycle end-to-end: creation, role-based signatures, and PDF exports ready for archiving. Reduced manual handling and sped up approvals.',
      highlights: [
        'Ship time: ~6–8 weeks',
        'Tooling: Next.js, WebSockets, Puppeteer, Railway',
        'Deliverables: Form builder, e-sign, PDF pipeline, admin',
      ],
    },	
  },
  {
    title: 'Audio → Text Transcription',
    industry: 'SaaS · Media',
    kpi: '↑ Scalable async processing',
    description:
      'Platform that converts audio files into text transcripts with export options for PDF/TXT and real-time status updates.',
    image: work2,
    href: '#',
    modal: {
      overview:
        'Implemented async queues and webhook updates to handle large uploads reliably. Clear progress states and clean exports.',
      highlights: [
        'Ship time: ~3–4 weeks',
        'Tooling: Next.js, React, AssemblyAI API, Git/GitHub',
        'Deliverables: Upload UI, job tracker, exporters',
      ],
    },
  },
  {
    title: 'Eyeland · Azure Deployment',
    industry: 'Cloud · DevOps',
    kpi: '↑ Production-grade reliability',
    description:
      'Backend & database deployment on Azure with secure configuration, performance checks, and mobile app data flows.',
    image: work3, // '../assets/eyeland.jpg'
    href: '#',
    modal: {
      overview:
        'Set up App Service/Static Web Apps, environment variables, and versioned releases. Verified API, auth, and mobile data paths; produced deployment docs.',
      highlights: [
        'Timeline: Jan–Jun',
        'Tooling: Azure App Service, Azure SQL, Node.js, JWT',
        'Deliverables: Cloud setup, CI/CD, docs & handoff',
      ],
    },
  },
  {
    title: 'Appointment Scheduler',
    industry: 'EdTech',
    kpi: '↓ Manual coordination time',
    description:
      'Scheduling app for professors in English courses with responsive UI and secure CRUD flows.',
    image: work4,
    href: '#',
    modal: {
      overview:
        'Simplified appointment booking and notifications; reduced back-and-forth and centralized availability.',
      highlights: [
        'Ship time: ~3 weeks',
        'Tooling: Next.js, Node.js, PostgreSQL',
        'Deliverables: Booking UI, admin, email notices',
      ],
    },
  },
  {
    title: 'Way2Go · Delivery',
    industry: 'Logistics · Mobile',
    kpi: '↑ Rapid prototype',
    description:
      'Prototype for a delivery app using low-code + Firebase to validate flows quickly.',
    image: work5,
    href: '#',
    modal: {
      overview:
        'Built MVP flows for auth, orders, and tracking to test assumptions before a full custom build.',
      highlights: [
        'Timeline: ~4 months (team)',
        'Tooling: FlutterFlow, Firebase',
        'Deliverables: MVP mobile flows, auth, data',
      ],
    },
  },
];
---

<section class="bg-white py-24" id="showcase">
	<div class="container space-y-12">
		<div class="mx-auto max-w-2xl text-center">
			<h2 class="text-sm font-semibold uppercase tracking-[0.4em] text-brand-dark/50">Showcase</h2>
			<p class="mt-4 text-3xl font-semibold text-brand-dark sm:text-4xl">Selected work driving outcomes for startups and SMB teams.</p>
			<p class="mt-4 text-sm text-brand-dark/65">
				Each project pairs ruthless prioritization with craftsmanship. Hover to preview the build and open details to inspect metrics, integrations, and the delivery timeline.
			</p>
		</div>

		<div class="grid gap-6 md:grid-cols-2 xl:grid-cols-3">
			{projects.map((project, index) => {
				const modalId = `project-modal-${index}`;
				return (
					<div class="group relative overflow-hidden rounded-3xl border border-brand-dark/10 bg-white shadow-[0_15px_45px_rgba(10,37,64,0.12)] transition duration-500 ease-brand hover:-translate-y-1 hover:shadow-card">
						<div class="relative overflow-hidden">
							<Image
								src={project.image}
								alt={`${project.title} preview`}
								format="webp"
								width={720}
								height={480}
								class="h-56 w-full object-cover transition duration-500 ease-brand group-hover:scale-[1.03]"
								loading="lazy"
							/>
							<div class="pointer-events-none absolute inset-0 bg-gradient-to-t from-brand-dark/30 via-transparent to-transparent opacity-0 transition duration-500 group-hover:opacity-100"></div>
							<div class="absolute left-6 top-6 inline-flex items-center gap-2 rounded-full bg-white/90 px-4 py-2 text-xs font-semibold uppercase tracking-[0.3em] text-brand-dark/60 shadow-soft">
								<span class="h-2.5 w-2.5 rounded-full bg-brand-lime"></span>
								{project.industry}
							</div>
						</div>
						<div class="flex flex-col gap-4 p-8">
							<div class="space-y-3">
								<h3 class="text-2xl font-semibold text-brand-dark">{project.title}</h3>
								<p class="text-sm font-semibold uppercase tracking-[0.3em] text-brand-dark/50">{project.kpi}</p>
								<p class="text-sm leading-relaxed text-brand-dark/70">{project.description}</p>
							</div>
							<div class="mt-auto flex items-center justify-between text-sm font-semibold text-brand-dark/70">
							</div>
						</div>
						<dialog
							id={modalId}
							class="rounded-3xl border border-brand-dark/10 bg-white/95 p-0 text-left backdrop:bg-brand-dark/30 backdrop:backdrop-blur"
						>
							<form method="dialog">
								<div class="space-y-6 p-8">
									<div class="flex items-start justify-between gap-6">
										<div>
											<p class="text-xs font-semibold uppercase tracking-[0.3em] text-brand-dark/50">{project.industry}</p>
											<h4 class="mt-2 text-2xl font-semibold text-brand-dark">{project.title}</h4>
										</div>
										<button
											type="submit"
											class="inline-flex h-10 w-10 items-center justify-center rounded-full border border-brand-dark/10 bg-brand-gray/80 text-brand-dark hover:bg-brand-gray focus-visible:outline-none focus-visible:ring-4 focus-visible:ring-brand-cyan/40"
											aria-label="Close case study"
										>
											<svg class="h-4 w-4" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.8">
												<path d="M18 6 6 18" stroke-linecap="round" />
												<path d="m6 6 12 12" stroke-linecap="round" />
											</svg>
										</button>
									</div>
									<p class="text-sm leading-relaxed text-brand-dark/70">{project.modal.overview}</p>
									<ul class="grid gap-3 text-sm text-brand-dark/80 md:grid-cols-2">
										{project.modal.highlights.map((item) => (
											<li class="rounded-2xl bg-brand-gray/80 px-4 py-3">
												{item}
											</li>
										))}
									</ul>
									<div class="rounded-2xl border border-brand-dark/10 bg-brand-gray/60 p-4 text-xs text-brand-dark/60">
										<p>Interested in a similar build? Book a discovery call and we’ll unpack the tech stack, resourcing, and delivery approach.</p>
									</div>
								</div>
							</form>
						</dialog>
					</div>
				);
			})}
		</div>
	</div>
</section>

<script type="module" is:inline>
	const reduced = document.documentElement.dataset.reducedMotion === 'true';
	document.addEventListener('astro:page-load', () => {
		const modals = document.querySelectorAll('dialog[id^="project-modal-"]');
		modals.forEach((modal) => {
			const openers = document.querySelectorAll(`[data-modal-open="${modal.id}"]`);
			openers.forEach((button) => {
				button.addEventListener('click', () => {
					if (!reduced) {
						modal.classList.add('animate-modal');
					}
					modal.showModal();
				});
			});
			modal.addEventListener('cancel', (event) => {
				event.preventDefault();
				modal.close();
			});
			modal.addEventListener('click', (event) => {
				const target = event.target;
				if (!(target instanceof HTMLElement)) return;
				const rect = modal.getBoundingClientRect();
				const withinDialog =
					event.clientX >= rect.left &&
					event.clientX <= rect.right &&
					event.clientY >= rect.top &&
					event.clientY <= rect.bottom;
				if (!withinDialog) {
					modal.close();
				}
			});
			modal.addEventListener('close', () => {
				modal.classList.remove('animate-modal');
			});
		});
	});
</script>

<style is:global>
	dialog.animate-modal::backdrop {
		animation: fade-in 200ms ease-out forwards;
	}

	dialog.animate-modal {
		animation: pop-in 320ms var(--ease-brand, cubic-bezier(0.16, 1, 0.3, 1)) forwards;
	}

	@keyframes fade-in {
		from {
			backdrop-filter: blur(0);
			background: rgba(10, 37, 64, 0);
		}
		to {
			backdrop-filter: blur(14px);
			background: rgba(10, 37, 64, 0.3);
		}
	}

	@keyframes pop-in {
		from {
			opacity: 0;
			transform: translateY(20px) scale(0.96);
		}
		to {
			opacity: 1;
			transform: translateY(0) scale(1);
		}
	}
</style>
