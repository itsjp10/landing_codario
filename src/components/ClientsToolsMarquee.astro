---
type Logo = {
	src: string;
	alt: string;
	href?: string;
};

export interface Props {
	row1: Logo[];
	row2?: Logo[];
	speedMs?: number;
	gap?: string;
	grayscale?: boolean;
	row1Label?: string;
	row1Caption?: string;
	row2Label?: string;
	row2Caption?: string;
	heading?: string;
	subheading?: string;
}

const encodeSvg = (value: string) =>
	encodeURIComponent(value).replace(/'/g, "%27");

const wrapLogo = (content: string) =>
	`data:image/svg+xml;utf8,${encodeSvg(
		`<svg xmlns="http://www.w3.org/2000/svg" width="160" height="56" viewBox="0 0 160 56" fill="none"><rect width="160" height="56" rx="16" fill="#FFFFFF"/><rect x="0.75" y="0.75" width="158.5" height="54.5" rx="15.25" stroke="#0A2540" stroke-opacity="0.08" stroke-width="1.5"/>${content}</svg>`,
	)}`;

const defaultRow1: Logo[] = [
	{
		alt: "Google Cloud",
		src: wrapLogo(
			`<g transform="translate(24 8)"><circle cx="24" cy="20" r="9" fill="#4285F4"/><circle cx="36" cy="16" r="8" fill="#EA4335"/><circle cx="42" cy="26" r="8" fill="#FBBC05"/><circle cx="30" cy="30" r="8" fill="#34A853"/></g>`,
		),
	},
	{
		alt: "Microsoft Azure",
		src: wrapLogo(
			`<g transform="translate(28 8)"><path d="M12 34 26 6h10L22 34h-10Z" fill="#50E6FF"/><path d="M28 34 42 6h12L34 34h-6Z" fill="#0078D4"/></g>`,
		),
	},
	{
		alt: "GitHub",
		src: wrapLogo(
			`<g transform="translate(30 8)"><circle cx="22" cy="20" r="18" fill="#181717"/><path d="M12.5 22.5c0-4.5 3.5-8.2 7.8-8.2 1.8 0 3.5.7 4.8 1.8 1.2-1.1 2.9-1.8 4.8-1.8 4.3 0 7.8 3.7 7.8 8.2 0 3.7-2.2 6.7-5.1 7.6v4c0 2.1-1.8 3.8-3.9 3.8h-7.4c-2.1 0-3.9-1.7-3.9-3.8v-4c-2.9-.9-5.1-3.9-5.1-7.6Z" fill="#FFFFFF"/></g>`,
		),
	},
	{
		alt: "Stripe",
		src: wrapLogo(
			`<g transform="translate(24 12)"><rect width="72" height="32" rx="14" fill="#635BFF"/><text x="36" y="22" font-family="Poppins, Arial, sans-serif" font-size="16" font-weight="700" fill="#FFFFFF" text-anchor="middle">stripe</text></g>`,
		),
	},
	{
		alt: "Vercel",
		src: wrapLogo(
			`<g transform="translate(38 10)"><path d="M0 36 20 6l20 30H0Z" fill="#101010"/></g>`,
		),
	},
];

const defaultRow2: Logo[] = [
	{
		alt: "Amazon Web Services",
		src: wrapLogo(
			`<g transform="translate(18 10)"><text x="0" y="22" font-family="Poppins, Arial, sans-serif" font-size="24" font-weight="600" fill="#232F3E">aws</text><path d="M0 30c8.4 5.1 18.8 5.1 27.8 2.2 9.4-3 16.5-8.3 24.6-10.6-6.8 5.2-15 12.8-28.5 14.1C14.4 36.6 6.7 34.4 0 30Z" fill="#FF9900"/></g>`,
		),
	},
	{
		alt: "Twilio",
		src: wrapLogo(
			`<g transform="translate(26 8)"><circle cx="24" cy="20" r="16" fill="#F22F46"/><circle cx="19" cy="15" r="4" fill="#FFFFFF"/><circle cx="29" cy="15" r="4" fill="#FFFFFF"/><circle cx="19" cy="25" r="4" fill="#FFFFFF"/><circle cx="29" cy="25" r="4" fill="#FFFFFF"/></g>`,
		),
	},
	{
		alt: "Notion",
		src: wrapLogo(
			`<g transform="translate(24 8)"><rect x="2" y="2" width="44" height="36" rx="6" fill="#FFFFFF" stroke="#0A2540" stroke-width="3"/><text x="24" y="26" font-family="Georgia, serif" font-size="22" font-weight="700" text-anchor="middle" fill="#0A2540">N</text></g>`,
		),
	},
	{
		alt: "Slack",
		src: wrapLogo(
			`<g transform="translate(28 8)"><rect x="22" width="12" height="32" rx="6" fill="#36C5F0"/><rect x="0" y="20" width="32" height="12" rx="6" fill="#2EB67D"/><rect x="22" y="20" width="32" height="12" rx="6" fill="#ECB22E"/><rect x="22" y="22" width="12" height="32" rx="6" fill="#E01E5A"/></g>`,
		),
	},
	{
		alt: "Figma",
		src: wrapLogo(
			`<g transform="translate(32 8)"><path d="M12 7c0-3.314 2.686-6 6-6h6v12h-6c-3.314 0-6-2.686-6-6Z" fill="#F24E1E"/><path d="M24 1h6c3.314 0 6 2.686 6 6s-2.686 6-6 6h-6V1Z" fill="#FF7262"/><path d="M12 19c0-3.314 2.686-6 6-6h6v12h-6c-3.314 0-6-2.686-6-6Z" fill="#A259FF"/><path d="M24 13h6c3.314 0 6 2.686 6 6s-2.686 6-6 6h-6V13Z" fill="#1ABCFE"/><path d="M12 31c0-3.314 2.686-6 6-6h6v6c0 3.314-2.686 6-6 6s-6-2.686-6-6Z" fill="#0ACF83"/></g>`,
		),
	},
];

const {
	row1: row1Prop,
	row2: row2Prop,
	speedMs = 22000,
	gap = "gap-8 sm:gap-12",
	grayscale = true,
	row1Label = "Clients",
	row1Caption = "A few teams we've worked with (and anonymized engagements).",
	row2Label = "Tools",
	row2Caption = "Our day-to-day stack for building, shipping, and scaling.",
	heading = "Clients & Tools we collaborate with",
	subheading = "Selected clients and the tools we ship with.",
} = Astro.props as Props;

const primaryRow =
	Array.isArray(row1Prop) && row1Prop.length > 0 ? row1Prop : defaultRow1;
const secondaryRow =
	Array.isArray(row2Prop) && row2Prop.length > 0 ? row2Prop : defaultRow2;

const buildMarqueeItems = (items: Logo[]) => {
	if (!items.length) return items;
	const minItems = Math.max(10, items.length * 3);
	const loop: Logo[] = [];
	while (loop.length < minItems) {
		loop.push(...items);
	}
	return loop.slice(0, minItems);
};

const rows = [
	{
		logos: primaryRow,
		reverse: false,
		label: row1Label,
		caption: row1Caption,
	},
	{
		logos: secondaryRow,
		reverse: true,
		label: row2Label,
		caption: row2Caption,
	},
].filter(({ logos }) => logos.length > 0);

const tileBaseClasses =
	"flex min-w-[5.5rem] items-center justify-center rounded-xl bg-white/90 px-4 py-3 text-center ring-1 ring-brand-dark/5 transition duration-300 ease-out hover:-translate-y-1 hover:ring-brand-cyan/20 hover:shadow-lg hover:shadow-brand-dark/10 focus-visible:outline-none focus-visible:ring-4 focus-visible:ring-brand-cyan/30 sm:min-w-[7rem] sm:px-6 sm:py-4";

const imgClasses = [
	"h-10 sm:h-12 lg:h-14 w-auto object-contain transition duration-300 ease-out",
	grayscale
		? "grayscale opacity-75 group-hover:grayscale-0 group-hover:opacity-100 group-focus-visible:grayscale-0 group-focus-visible:opacity-100"
		: "opacity-90 group-hover:opacity-100 group-focus-visible:opacity-100",
].join(" ");

const animationDuration = `${speedMs}ms`;
---

<section
	aria-label="Clients and tools we collaborate with"
	class="bg-transparent py-16 sm:py-20"
	role="region"
>
	<div class="container mx-auto space-y-12 px-6 sm:px-8 lg:px-12">
		<header class="mx-auto max-w-3xl space-y-3 text-center text-brand-dark">
			<h2 class="text-3xl font-semibold tracking-tight sm:text-4xl">
				{heading}
			</h2>
			<p class="text-sm text-brand-dark/70 sm:text-base">{subheading}</p>
		</header>

		<div class="space-y-12">
			{
				rows.map(({ logos, reverse, label, caption }, rowIndex) => {
					const headingId = `clients-tools-row-${rowIndex}`;
					const sequence = buildMarqueeItems(logos);

					return (
						<section class="space-y-5" aria-labelledby={headingId}>
							<header class="space-y-1 text-center text-brand-dark">
								<h3
									id={headingId}
									class="text-lg font-semibold uppercase tracking-[0.3em] text-brand-dark/70"
								>
									{label}
								</h3>
								{caption && (
									<p class="text-sm text-brand-dark/65">
										{caption}
									</p>
								)}
							</header>
							<div class="marquee-row group relative overflow-hidden">
								<div
									class="marquee-track flex"
									style={`--marquee-duration:${animationDuration}`}
									data-direction={
										reverse ? "reverse" : "forward"
									}
									aria-labelledby={headingId}
								>
									{[0, 1].map((copyIndex) => (
										<ul
											role="list"
											class={`marquee-segment flex flex-shrink-0 items-center ${gap}`}
											aria-hidden={
												copyIndex === 1
													? "true"
													: undefined
											}
										>
											{sequence.map((logo, logoIndex) => {
												const key = `${logo.src ?? logo.alt}-${copyIndex}-${logoIndex}`;
												const isDuplicate =
													copyIndex === 1;
												const content = (
													<>
														<img
															src={logo.src}
															alt={logo.alt}
															width="160"
															height="56"
															loading="lazy"
															decoding="async"
															class={imgClasses}
														/>
													</>
												);

												return (
													<li
														role="listitem"
														class="flex-shrink-0"
														aria-hidden={
															isDuplicate
																? "true"
																: undefined
														}
													>
														{logo.href ? (
															<a
																href={logo.href}
																aria-label={
																	logo.alt
																}
																class={`logo-tile group ${tileBaseClasses}`}
																tabindex={
																	isDuplicate
																		? -1
																		: undefined
																}
															>
																{content}
															</a>
														) : (
															<div
																class={`logo-tile group ${tileBaseClasses}`}
																tabindex={
																	isDuplicate
																		? -1
																		: 0
																}
															>
																{content}
															</div>
														)}
													</li>
												);
											})}
										</ul>
									))}
								</div>
							</div>
						</section>
					);
				})
			}
		</div>
	</div>
</section>

<style>
	.marquee-row {
		padding-block: 0.6rem;
	}

	.marquee-track {
		width: max-content;
		animation: marquee var(--marquee-duration, 22000ms) linear infinite;
		transform: translate3d(0, 0, 0);
		will-change: transform;
	}

	.marquee-track[data-direction="reverse"] {
		animation-direction: reverse;
	}

	.marquee-row:hover .marquee-track,
	.marquee-row:focus-within .marquee-track {
		animation-play-state: paused;
	}

	.marquee-segment {
		padding-inline: 0.5rem;
	}

	.logo-tile {
		min-width: 7.5rem;
	}

	@keyframes marquee {
		from {
			transform: translate3d(0, 0, 0);
		}
		to {
			transform: translate3d(-50%, 0, 0);
		}
	}

	@media (prefers-reduced-motion: reduce) {
		.marquee-track {
			animation: none !important;
			transform: none !important;
		}
	}
</style>
